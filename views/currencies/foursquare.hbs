<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Leaflet Map Example</title>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <!-- Leaflet CSS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
</head>
<body>
  <a id="top"></a>
<a href="#bottom" class="btn btn-info">Goto BOTTOM</a>
<t></t>
<h5>SCHEMA</h5>
    currency_id, currency_name, alpha2,CallingCodes, alpha3, ioc, symbol
    <p></p>
    emoji_iso2, emoji_iso3, emoji_code
    <p></p>
    region_id, region_alpha2
    <p></p>
    region_country_id, region_name, country_iso2
    <p></p> 
    Latlng_id, country_name, alpha2, alpha3, CallingCodes, lat, lng
    <p></p> 
    <form method="POST" action="/submit">
        <div class="mb-3">
        <label>Select Country</label>
        <select name="Latlng_id" class="form-control" id="latlngDropdown">
            {{#each latlngs}}
            <option value="{{Latlng_id}}">{{country_name}} [{{lat}}, {{lng}}]</option>
            {{/each}}
        </select>
        <script>
          const dropdown = document.getElementById('latlngDropdown');
          dropdown.addEventListener('change', function () {
            const selectedValue = dropdown.value;  // Latlng_id
            const selectedText = dropdown.options[dropdown.selectedIndex].text; // country_name

            console.log("Selected Latlng_id:", selectedValue);
            console.log("Selected country_name:", selectedText);
            const selectedText2 = stripOffCountryName(selectedText);
            console.log("Selected [lat, lng]:", selectedText2);
            let mapArray = getLatLngArray(selectedText2);
            let map;
            mapLoad(map, mapArray);

            function mapLoad(map, latlng) {
              console.log("Calling mapLoad()--------")
              console.log("map upon calling is  ", map);
              if (map) {
                L.map().setView(latlng, 13);
              }
              else  {
                console.log("map before initialization is  ", map);
                map = new L.map('map-load').setView(latlng, 13);
                //  map = new L.map('map-load').setView(latlng, 13);
                console.log("map after initialization is ", map);
              }

              console.log("map is loaded and setview() successful.", map);
              if (!map) {
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                  attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);

                L.marker(latlng).addTo(map)
                  .bindPopup({{ country_name }})
                .openPopup();
              }
            }  //  function mapLoad(map, latlng) {
            
            function stripOffCountryName(text) {
              const regex = /^[^\[]+/;
              return text.replace(regex, '').trim();
            }  //  function stripOffCountryName(text) {

            function getLatLngArray(selectedText) {
              // Use regex to match the part inside the square brackets and extract the lat, lng
              const regex = /\[([-\d.]+),\s*([-\d.]+)\]/;
              const match = selectedText.match(regex);  // Match the pattern [lat, lng]

              if (match) {
                // Return an array of [lat, lng]
                const lat = parseFloat(match[1]);
                const lng = parseFloat(match[2]);
                return [lat, lng];
              }
              return nul[1.367, 103.8]; // Return Singapore  if no match found
            }  //  function getLatLngArray(selectedText) {

          });
        </script>

    </form>
    
    <div><h5>MENU</h5>
        <t></t>
        <a href="/currencies" class="btn btn-primary">All Currencies</a>
        <t></t>
         <a href="/currencies/create" class="btn btn-secondary">Add Currency</a>
        <t></t>
        <a href="/currencies/regions" class="btn btn-info">All Regions</a>
        <t></t>
        <a href="/currencies/regionsCountries" class="btn btn-info">All Regions with Countries</a>
        <t></t>
        <!--
        <a href="/currencies/regionsCountriesCreate" class="btn btn-secondary">Create Region and Country Mapping</a>
        <t></t>
        -->
        <a href="/currencies/latlngs" class="btn btn-info">All Countries with Latitude and Longitude</a>
        <t></t>
        <a href="/currencies/showloggings" class="btn btn-info">Show Loggings</a>
        <t></t>
        <p></p>
    </div>

  <!-- Map container -->
  <div id="map-load" style="height: 500px;"></div>

    <div><h5>MENU</h5>
        <t></t>
        <a href="/currencies" class="btn btn-primary">All Currencies</a>
        <t></t>
         <a href="/currencies/create" class="btn btn-secondary">Add Currency</a>
        <t></t>
        <a href="/currencies/regions" class="btn btn-info">All Regions</a>
        <t></t>
        <a href="/currencies/regionsCountries" class="btn btn-info">All Regions with Countries</a>
        <t></t>
        <!--
        <a href="/currencies/regionsCountriesCreate" class="btn btn-secondary">Create Region and Country Mapping</a>
        <t></t>
        -->
        <a href="/currencies/latlngs" class="btn btn-info">All Countries with Latitude and Longitude</a>
        <t></t>
        <a href="/currencies/showloggings" class="btn btn-info">Show Loggings</a>
        <t></t>
        <p></p>
    </div>
    <a href="#top" class="btn btn-info">Goto TOP</a>
    <t></t>
    <a id="bottom"></a>


  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script>
    
    // let map = new L.map('map-load').setView([{{lat}}, {{lng}}], 13);
    let map;  
    mapLoad2(map, [{{lat}}, {{lng}}]);

  function mapLoad2(map, latlng, countryName) {
    console.log("Calling mapLoad2()--------");
    console.log("map upon calling is  ", map);

    // Initialize the map if it hasn't been initialized already
    if (!map) {
      map = L.map('map-load').setView(latlng, 13); // Set initial view with the latlng
      console.log("map after initialization is ", map);

      // Adding tile layer to the map
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
      }).addTo(map);
    }

    console.log("map is loaded and setView() successful.", map);

    // Adding a marker with a popup (with dynamic country name)
    L.marker(latlng).addTo(map)
      .bindPopup(countryName)  // Country name passed to bindPopup
      .openPopup();
  }  //  function mapLoad2(map, latlng, countryName) {


  </script>
</body>
</html>
